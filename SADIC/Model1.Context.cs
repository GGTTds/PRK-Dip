//------------------------------------------------------------------------------
// <auto-generated>
//     Этот код создан по шаблону.
//
//     Изменения, вносимые в этот файл вручную, могут привести к непредвиденной работе приложения.
//     Изменения, вносимые в этот файл вручную, будут перезаписаны при повторном создании кода.
// </auto-generated>
//------------------------------------------------------------------------------

namespace SADIC
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class EWnter : DbContext
    {
        public static EWnter _con;
        public EWnter()
            : base("name=EWnter")
        {
        }
       public static EWnter Qwer()
        {
            if (_con == null)
                _con = new EWnter();
            return _con;

        }

        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<Child> Child { get; set; }
        public virtual DbSet<Event> Event { get; set; }
        public virtual DbSet<Group> Group { get; set; }
        public virtual DbSet<Parents> Parents { get; set; }
        public virtual DbSet<Roul> Roul { get; set; }
        public virtual DbSet<sysdiagrams> sysdiagrams { get; set; }
        public virtual DbSet<Tich> Tich { get; set; }
        public virtual DbSet<Zanztia> Zanztia { get; set; }
    
        public virtual int FIO(string logww, ObjectParameter ima)
        {
            var logwwParameter = logww != null ?
                new ObjectParameter("logww", logww) :
                new ObjectParameter("logww", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("FIO", logwwParameter, ima);
        }
    
        public virtual int Reg(string fIo, string tel, string log, string pass, ObjectParameter v)
        {
            var fIoParameter = fIo != null ?
                new ObjectParameter("FIo", fIo) :
                new ObjectParameter("FIo", typeof(string));
    
            var telParameter = tel != null ?
                new ObjectParameter("tel", tel) :
                new ObjectParameter("tel", typeof(string));
    
            var logParameter = log != null ?
                new ObjectParameter("log", log) :
                new ObjectParameter("log", typeof(string));
    
            var passParameter = pass != null ?
                new ObjectParameter("Pass", pass) :
                new ObjectParameter("Pass", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Reg", fIoParameter, telParameter, logParameter, passParameter, v);
        }
    
        public virtual int Rol(string log, ObjectParameter v)
        {
            var logParameter = log != null ?
                new ObjectParameter("log", log) :
                new ObjectParameter("log", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Rol", logParameter, v);
        }
    
        public virtual int Vxod(string logg, string pasWr, ObjectParameter vix)
        {
            var loggParameter = logg != null ?
                new ObjectParameter("logg", logg) :
                new ObjectParameter("logg", typeof(string));
    
            var pasWrParameter = pasWr != null ?
                new ObjectParameter("pasWr", pasWr) :
                new ObjectParameter("pasWr", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Vxod", loggParameter, pasWrParameter, vix);
        }
    }
}
